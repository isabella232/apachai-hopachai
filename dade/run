#!/bin/bash
set -e
eval "$(./dade/dump.rb Dadefile)"

# Prepare keys for SSHFS.
if ! [[ -e ~/.dade ]]; then
	mkdir -p ~/.dade
	chmod 700 ~/.dade
fi
if ! [[ -e ~/.dade/ssh_key ]] || ! [[ -e ~/.dade/ssh_key.pub ]]; then
	rm -f ~/.dade/ssh_key ~/.dade/ssh_key.pub
	ssh-keygen -N "" -b 1024 -f ~/.dade/ssh_key -C "dade sshfs public key" >/dev/null
fi
if ! [[ -e ~/.ssh ]]; then
	mkdir -p ~/.ssh
	chmod 700 ~/.ssh
fi
if ! [[ -e ~/.ssh/authorized_keys ]]; then
	echo >> ~/.ssh/authorized_keys
fi
if ! grep -q -F "`cat ~/.dade/ssh_key.pub`" ~/.ssh/authorized_keys; then
	cat ~/.dade/ssh_key.pub >> ~/.ssh/authorized_keys
fi

workdir=`mktemp -d /tmp/dademount.XXXXXXX`
trap cleanup EXIT
sshfs_options=ssh_command=`pwd`/dade/ssh,idmap=user,allow_other
if [[ "$DADEFILE_APP_MOUNT_UID" != "" ]]; then
	sshfs_options="$sshfs_options,uid=$DADEFILE_APP_MOUNT_UID"
fi
if [[ "$DADEFILE_APP_MOUNT_GID" != "" ]]; then
	sshfs_options="$sshfs_options,gid=$DADEFILE_APP_MOUNT_GID"
fi

mkdir "$workdir/mount"
sshfs -o $sshfs_options localhost:`pwd`/$DADEFILE_APP_DIR_PATH/ "$workdir/mount"
set +e
docker run -t -i -privileged -v "$workdir/mount":/app $DADEFILE_NAME:$DADEFILE_VERSION.dev
exitstatus=$?
if sudo umount "$workdir/mount" 2>/dev/null; then
	rm -rf "$workdir"
else
	echo "Cannot unmount now. Will unmount later."
	sudo umount -l "$workdir/mount" 2>/dev/null || true
fi
exit $exitstatus
