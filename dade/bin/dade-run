#!/bin/bash
set -e
DADEROOT=`dirname "$0"`
DADEROOT=`cd "$DADEROOT/.."; pwd`
source "$DADEROOT/bashlib/library.sh"

if ! [[ `id -a` =~ fuse ]]; then
	echo "The current user (`whoami`) is not a member of the 'fuse' group. Please add '`whoami`' to the 'fuse' group:"
	echo
	echo "  sudo usermod -a -G fuse `whoami`"
	echo
	echo "If '`whoami`' is already part of the 'fuse' group, please relogin to activate the group membership."
	exit 1
fi

dump=$("$DADEROOT/scripts/dump.rb" Dadefile)
eval "$dump"

bindfs_options=
if [[ "$DADEFILE_APP_MOUNT_UID" != "" ]]; then
	bindfs_options="$bindfs_options -u $DADEFILE_APP_MOUNT_UID"
fi
if [[ "$DADEFILE_APP_MOUNT_GID" != "" ]]; then
	bindfs_options="$bindfs_options -g $DADEFILE_APP_MOUNT_GID"
fi

docker_options="--rm $DADEFILE_DOCKER_RUN_OPTIONS"
if [[ "$DADEFILE_PRIVILEGED" = true ]]; then
	docker_options="$docker_options --privileged"
fi
if [[ "$DADEFILE_PORT_FORWARDS" != "" ]]; then
	for spec in $DADEFILE_PORT_FORWARDS; do
		docker_options="$docker_options -p $spec"
	done
fi
if [[ "$DADEFILE_BIND_MOUNTS" != "" ]]; then
	for spec in $DADEFILE_BIND_MOUNTS; do
		docker_options="$docker_options -v $spec"
	done
fi

workdir=`mktemp -d /tmp/dademount.XXXXXXX`

function cleanup()
{
	rm -f .dade_container
	echo " --> Unmounting app directory"
	sudo umount "$workdir/mount" 2>/dev/null ||
		sudo umount -l "$workdir/mount"
	echo " --> Removing Dade temporary directory"
	rm -rf --one-file-system "$workdir" 2>/dev/null
}

mkdir "$workdir/mount"
bindfs $bindfs_options `pwd`/$DADEFILE_APP_DIR_PATH "$workdir/mount"
docker run -t -i -e DADE_ENV=development $docker_options --cidfile .dade_container -v "$workdir/mount":/app $DADEFILE_NAME:$DADEFILE_VERSION.dev
