#!/usr/bin/env ruby
require 'socket'
require 'fileutils'
require 'base64'
Dir.chdir('/home/appa')

puts "Waiting for input"
server = TCPServer.new('0.0.0.0', 3002)
client = server.accept
client.sync = true
client.binmode

puts "Receiving options"
options = Marshal.load(Base64.decode64(client.readline))

puts "Receiving input"
input = File.open('input.tar.gz', 'wb')
size = 0
while true
	line = client.readline
	break if line == "\n"
	buf = Base64.decode64(line)
	size += buf.size
	input.write(buf)
	puts "  -> Received #{size} bytes so far"
end
input.close

puts "Extracting input"
FileUtils.rm_rf("work")
Dir.mkdir("work")
Dir.chdir("work")
if !system("tar xzf ../input.tar.gz")
	abort "runner: Cannot extract payload"
end
File.unlink("../input.tar.gz")

puts "Running input"
if !system("./main", *options[:args])
	abort "runner: Error running input"
end

puts "Packaging output"
if !system("tar -c . > ../output.tar")
	abort "runner: Error creating tarball"
end
Dir.chdir("..")
if !system("gzip -f --best output.tar")
	abort "runner: Error gzipping tarball"
end

puts "Sending output"
output = File.open("output.tar.gz", "rb")
size = 0
while !output.eof?
	buf = output.read(1024 * 32)
	client.write(Base64.strict_encode64(buf))
	client.write("\n")
	size += buf.size
	puts "  -> Written #{size} bytes so far"
end
client.write("\n")
output.close
File.unlink("output.tar.gz")
FileUtils.rm_rf("work")

puts "Done"
client.close
